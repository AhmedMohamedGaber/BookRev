@*@model IEnumerable<BookRev.Models.Book>*@
  @model IEnumerable<Book>
@{
    ViewData["Title"] = "Books";
    }
    
    <h2>
    <i class="bi bi-book-half"></i>
        Books
    </h2>
    <hr />
    <p>
<p>

    <a class="btn btn-primary" asp-action="Create"><i class="bi bi-plus-square"></i> Create New</a>
</p>



<div class="mt-4">
    @if (!Model.Any())
    {
        <div class="alert alert-warning alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-octagon"></i>
             No Book Found.....!
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    else
    {
        <div class="row" >
               @* @foreach (var book in Model)
                {
                    <div class="col-12">
                    <div class="card mb-2" style="max-width: 540px;">
                        <div class="row no-gutters">
                            <div class="col-md-4" style="background-image: url(data:image\/*;base64,@(Convert.ToBase64String(Book.Poster)))"> </div>
                            <div class="col-md-10">
                                <div class="card-body">
                                    <h5 class="card-title">Card title</h5>
                                    <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
                                    <p class="card-text"><small class="text-muted">Last updated 3 mins ago</small></p>
                                </div>
                            </div>
                        </div>
                    </div>
                    </div>*@
                }

        </div>
    }

</div>
    


@*<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Year)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Poster)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CategoryId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AuthorId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PublisherId)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Year)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Poster)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AuthorId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PublisherId)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
            </td>
        </tr>
}
    </tbody>
</table>*@
